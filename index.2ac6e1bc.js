function r(r,t){(null==t||t>r.length)&&(t=r.length);for(var n=0,e=Array(t);n<t;n++)e[n]=r[n];return e}function t(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}(t)||function(t,n){if(t){if("string"==typeof t)return r(t,void 0);var e=Object.prototype.toString.call(t).slice(8,-1);if("Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e)return Array.from(e);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return r(t,void 0)}}(t)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}!function(r,n){var e=!0,o=!1,i=void 0;try{for(var l,a=t(r.children)[Symbol.iterator]();!(e=(l=a.next()).done);e=!0){var u=l.value,c=t(u.children),f=!0,y=!1,d=void 0;try{for(var h,v=c[Symbol.iterator]();!(f=(h=v.next()).done);f=!0){var m=h.value,b=m.children[1].cloneNode(!0);m.children[m.children.length-1].before(b)}}catch(r){y=!0,d=r}finally{try{f||null==v.return||v.return()}finally{if(y)throw d}}}}catch(r){o=!0,i=r}finally{try{e||null==a.return||a.return()}finally{if(o)throw i}}}(document.querySelector("table"),0);
//# sourceMappingURL=index.2ac6e1bc.js.map
